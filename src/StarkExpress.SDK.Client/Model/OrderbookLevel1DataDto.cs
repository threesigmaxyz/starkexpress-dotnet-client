/*
 * StarkExpress API Docs
 *
 * An API for the StarkExpress platform.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = StarkExpress.SDK.Client.Client.OpenAPIDateConverter;

namespace StarkExpress.SDK.Client.Model
{
    /// <summary>
    /// OrderbookLevel1DataDto
    /// </summary>
    [DataContract(Name = "OrderbookLevel1DataDto")]
    public partial class OrderbookLevel1DataDto : IEquatable<OrderbookLevel1DataDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderbookLevel1DataDto" /> class.
        /// </summary>
        /// <param name="orderbookId">The ID of the orderbook..</param>
        /// <param name="bidPrice">The highest posted price where someone is willing to buy an asset..</param>
        /// <param name="bidSize">The number of asset shares that users are trying to buy at the bid price..</param>
        /// <param name="askPrice">The lowest posted price where someone is willing to sell an asset..</param>
        /// <param name="askSize">The number of asset shares that users are trying to sell at the bid ask..</param>
        /// <param name="lastPrice">The price at which the last transaction occurred..</param>
        /// <param name="lastSize">The number of asset shares involved in the last transaction..</param>
        public OrderbookLevel1DataDto(Guid orderbookId = default(Guid), double bidPrice = default(double), string bidSize = default(string), double askPrice = default(double), string askSize = default(string), double lastPrice = default(double), string lastSize = default(string))
        {
            this.OrderbookId = orderbookId;
            this.BidPrice = bidPrice;
            this.BidSize = bidSize;
            this.AskPrice = askPrice;
            this.AskSize = askSize;
            this.LastPrice = lastPrice;
            this.LastSize = lastSize;
        }

        /// <summary>
        /// The ID of the orderbook.
        /// </summary>
        /// <value>The ID of the orderbook.</value>
        [DataMember(Name = "orderbookId", EmitDefaultValue = false)]
        public Guid OrderbookId { get; set; }

        /// <summary>
        /// The highest posted price where someone is willing to buy an asset.
        /// </summary>
        /// <value>The highest posted price where someone is willing to buy an asset.</value>
        [DataMember(Name = "bidPrice", EmitDefaultValue = false)]
        public double BidPrice { get; set; }

        /// <summary>
        /// The number of asset shares that users are trying to buy at the bid price.
        /// </summary>
        /// <value>The number of asset shares that users are trying to buy at the bid price.</value>
        [DataMember(Name = "bidSize", EmitDefaultValue = false)]
        public string BidSize { get; set; }

        /// <summary>
        /// The lowest posted price where someone is willing to sell an asset.
        /// </summary>
        /// <value>The lowest posted price where someone is willing to sell an asset.</value>
        [DataMember(Name = "askPrice", EmitDefaultValue = false)]
        public double AskPrice { get; set; }

        /// <summary>
        /// The number of asset shares that users are trying to sell at the bid ask.
        /// </summary>
        /// <value>The number of asset shares that users are trying to sell at the bid ask.</value>
        [DataMember(Name = "askSize", EmitDefaultValue = false)]
        public string AskSize { get; set; }

        /// <summary>
        /// The price at which the last transaction occurred.
        /// </summary>
        /// <value>The price at which the last transaction occurred.</value>
        [DataMember(Name = "lastPrice", EmitDefaultValue = false)]
        public double LastPrice { get; set; }

        /// <summary>
        /// The number of asset shares involved in the last transaction.
        /// </summary>
        /// <value>The number of asset shares involved in the last transaction.</value>
        [DataMember(Name = "lastSize", EmitDefaultValue = false)]
        public string LastSize { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderbookLevel1DataDto {\n");
            sb.Append("  OrderbookId: ").Append(OrderbookId).Append("\n");
            sb.Append("  BidPrice: ").Append(BidPrice).Append("\n");
            sb.Append("  BidSize: ").Append(BidSize).Append("\n");
            sb.Append("  AskPrice: ").Append(AskPrice).Append("\n");
            sb.Append("  AskSize: ").Append(AskSize).Append("\n");
            sb.Append("  LastPrice: ").Append(LastPrice).Append("\n");
            sb.Append("  LastSize: ").Append(LastSize).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderbookLevel1DataDto);
        }

        /// <summary>
        /// Returns true if OrderbookLevel1DataDto instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderbookLevel1DataDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderbookLevel1DataDto input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OrderbookId == input.OrderbookId ||
                    (this.OrderbookId != null &&
                    this.OrderbookId.Equals(input.OrderbookId))
                ) && 
                (
                    this.BidPrice == input.BidPrice ||
                    this.BidPrice.Equals(input.BidPrice)
                ) && 
                (
                    this.BidSize == input.BidSize ||
                    (this.BidSize != null &&
                    this.BidSize.Equals(input.BidSize))
                ) && 
                (
                    this.AskPrice == input.AskPrice ||
                    this.AskPrice.Equals(input.AskPrice)
                ) && 
                (
                    this.AskSize == input.AskSize ||
                    (this.AskSize != null &&
                    this.AskSize.Equals(input.AskSize))
                ) && 
                (
                    this.LastPrice == input.LastPrice ||
                    this.LastPrice.Equals(input.LastPrice)
                ) && 
                (
                    this.LastSize == input.LastSize ||
                    (this.LastSize != null &&
                    this.LastSize.Equals(input.LastSize))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderbookId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderbookId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.BidPrice.GetHashCode();
                if (this.BidSize != null)
                {
                    hashCode = (hashCode * 59) + this.BidSize.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.AskPrice.GetHashCode();
                if (this.AskSize != null)
                {
                    hashCode = (hashCode * 59) + this.AskSize.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.LastPrice.GetHashCode();
                if (this.LastSize != null)
                {
                    hashCode = (hashCode * 59) + this.LastSize.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
