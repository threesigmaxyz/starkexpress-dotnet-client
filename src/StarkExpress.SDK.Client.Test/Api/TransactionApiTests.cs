/*
 * StarkExpress API Docs
 *
 * An API for the StarkExpress platform.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using StarkExpress.SDK.Client.Client;
using StarkExpress.SDK.Client.Api;
// uncomment below to import models
//using StarkExpress.SDK.Client.Model;

namespace StarkExpress.SDK.Client.Test.Api
{
    /// <summary>
    ///  Class for testing TransactionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransactionApiTests : IDisposable
    {
        private TransactionApi instance;

        public TransactionApiTests()
        {
            instance = new TransactionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TransactionApi
            //Assert.IsType<TransactionApi>(instance);
        }

        /// <summary>
        /// Test GetAllTransactions
        /// </summary>
        [Fact]
        public void GetAllTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pageNumber = null;
            //int pageSize = null;
            //TransactionStatus????????????????????????????????????????????????????????? transactionStatus = null;
            //FilterOptions????????????????????????????????????????????????????????? transactionStatusComparison = null;
            //int? starkexTxId = null;
            //FilterOptions????????????????????????????????????????????????????????? starkexTxIdComparison = null;
            //StarkExOperation????????????????????????????????????????????????????????? txType = null;
            //FilterOptions????????????????????????????????????????????????????????? txTypeComparison = null;
            //string sortBy = null;
            //var response = instance.GetAllTransactions(pageNumber, pageSize, transactionStatus, transactionStatusComparison, starkexTxId, starkexTxIdComparison, txType, txTypeComparison, sortBy);
            //Assert.IsType<TransactionDtoPaginatedResponseDto>(response);
        }

        /// <summary>
        /// Test GetTransaction
        /// </summary>
        [Fact]
        public void GetTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid transactionId = null;
            //var response = instance.GetTransaction(transactionId);
            //Assert.IsType<TransactionDto>(response);
        }
    }
}
